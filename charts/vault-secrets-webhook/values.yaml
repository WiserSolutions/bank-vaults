# Default values for vault-secrets-webhook.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

debug: false

certificate:
  useCertManager: false
  servingCertificate: null
  generate: false
  server:
    tls:
      crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ0RENDQXNpZ0F3SUJBZ0lRT2NEOW5JOUlKa2xwbk5reDRXM2pTREFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwemRtTXRZMkYwTFdOaE1CNFhEVEkwTURjeU5qQTJNekF5TlZvWERUSTFNRGN5TmpBMgpNekF5TlZvd1J6RkZNRU1HQTFVRUF4TThkbUYxYkhRdGJYVjBZWFJwYm1jdGQyVmlhRzl2YXkxMllYVnNkQzF6ClpXTnlaWFJ6TFhkbFltaHZiMnN1YTNWaVpTMXplWE4wWlcwdWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4bkIwbVZaWkdMS1BlSEYvZ04wNGZURXNVZFl0Qzd3Q1RBak1GQ3plZTlCKwoyTmNLUWsxMU1hMStxMGRoMEJTS0RKYTBBem9MMHJJWUtIU1Z4NHFyR2FSVXR3RlBqOUZSV1pGWnA1cy95SVZDCi9yQjdyWFl6bmVMQUI1S3NWdEFoWUFqa1VwVmVhRDhsUGtHalFmTGloTlMyLytGejZ2VjJQT0FoQU9xSlVOSEoKNExiOXI4QWRaelpRNVpRUnRlUmxLZjdqWDdkaytWTUFXQy9LZmNwaWdoTGpBb29aZ29LdUF3SGpKUHVuK0x5cAptTWMwODVVRDEvb3RzVXo4YlZPenczQWJLTUhjV1dvQXgzVFl0NUNYM2xzb01FYXBMMktLbGN6ZTdaZnEwUnBkCkNKQ2tQTldscWZrS3lUK2hodEdrZm9zcjNzMnhuOHBBNW10Y2RsYXBpUUlEQVFBQm80SDVNSUgyTUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNObXJNSFQ3Qm1pdk95QXZlYXVjYU1vY01EU1RDQmxRWURWUjBSCkJJR05NSUdLZ2twMllYVnNkQzF0ZFhSaGRHbHVaeTEzWldKb2IyOXJMWFpoZFd4MExYTmxZM0psZEhNdGQyVmkKYUc5dmF5NXJkV0psTFhONWMzUmxiUzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSUk4ZG1GMWJIUXRiWFYwWVhScApibWN0ZDJWaWFHOXZheTEyWVhWc2RDMXpaV055WlhSekxYZGxZbWh2YjJzdWEzVmlaUzF6ZVhOMFpXMHVjM1pqCk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnAwNEZmeUxzNGZVbDNmVWsvczVvaFNBeWtyVkFRRGxxSU1YRHYKZkM4elhwVWVZcENPYVVpS0JyR0c2WDJZN3B2NG9uNzQrejJpYUpEdGhIcTUzZStxTWtoK3FsTmFwWXFwZG5WWgpuMFJyOUlzYXEranJqOWMxRThDSUJ4dk9HUXZwaUtPbXZiRE5MT25hTzNtZXR1SnJzMnZHUXlpZ1ZiN0dvN3o4CldxTG9NMkhOL2NsaGN4Rkp4bVRiRFp5NTZBdnFwcldIN0k2TDczNVVqQmIrelJFWkdGY2VKb2NMZDQ4eXRQUDIKMjdOT2gzNS9LQ3hrWUYycFZ3K0UrOG5wOVhNTitwOWVadFpXTjhVd3ZkT01YOUdkMVdnVlJJZ0NnNFNiUzJQUQpxelQrNUVWNUgyMTJHREd4QXlhcFNkZlYvRnFRZHFnb2JVdFc3YUszQnpIRTYrMjUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeG5CMG1WWlpHTEtQZUhGL2dOMDRmVEVzVWRZdEM3d0NUQWpNRkN6ZWU5QisyTmNLClFrMTFNYTErcTBkaDBCU0tESmEwQXpvTDBySVlLSFNWeDRxckdhUlV0d0ZQajlGUldaRlpwNXMveUlWQy9yQjcKclhZem5lTEFCNUtzVnRBaFlBamtVcFZlYUQ4bFBrR2pRZkxpaE5TMi8rRno2dlYyUE9BaEFPcUpVTkhKNExiOQpyOEFkWnpaUTVaUVJ0ZVJsS2Y3alg3ZGsrVk1BV0MvS2ZjcGlnaExqQW9vWmdvS3VBd0hqSlB1bitMeXBtTWMwCjg1VUQxL290c1V6OGJWT3p3M0FiS01IY1dXb0F4M1RZdDVDWDNsc29NRWFwTDJLS2xjemU3WmZxMFJwZENKQ2sKUE5XbHFma0t5VCtoaHRHa2Zvc3IzczJ4bjhwQTVtdGNkbGFwaVFJREFRQUJBb0lCQUJDQzJPRE5VM3AvbVBwdgpqeWxjdnMrRDRPa3FSZk05QUgvdEYzWHlTY3pKaTFSbGlCLytLK3NuUVd2azg1bUpxL2JpTHpZNWhUUlJ4enJPCmdJdnEyTk80WGFnZ2ZzczdvbVl1ZHVSQVFhMWdrVE41NGNDTUhqMWIyWmlIdHJrK2RoaDBoUEx1SkwzTnl6NkQKM1o2bUkvemphaHFlV3JQSkdyNXo4NnNNMk1JVm5RcjFlSkRVNDJSYU15S1VKYWpsSG5UendlcmdMM1gvYVdYbQpLcUV0aU9DNy9zVUFZQW12NnVMM3FDNWZSVEtlV2NsSnRhN28yeG02WXZhQ250Y29ncWhIN3NNTmkxdE9tUnBhCld4Sk4rNEJGMVVuMndPUU9IUkc1Ym1HNlh0RGxmL25xZVY1eG5kMXZlUkJ4eUo0LzBCUGZURHAvTjFtM3RPeHEKMmo3RlhKRUNnWUVBMlNwQVRhV3JLTHc4VEF1NTZGbGUycmZJN3dGeGVmTi9xQnJwcHZoUG9iclZrM0RPVWs2MApGSSt6SUtxS25Wdi8yalQ3cENXcWtncWFQc0VFRTJhZXVCMVhBTkZnRXYrL25uOTlWeGtLZHJlNG5aUUE0aGJaClpwNmQ1ZFJuSlJZQ1FmRlhOeDRqZE0vZWNTZGhySU5TMGNOQy9ZZ0lFZittZFZPMjhRWG8xa1VDZ1lFQTZlengKemRZWE10eGlON1JnSXRWM2NMZE9YM2lDN3RFY1Ivc3hqU0thS0dCNnNZQUhJQ25QT3MrNFZlK3hiT3g1WURDeApwd2NxVnFQQjFPTlkyd3ZtelZLQlhvNHpobDFJVnhBc05SeTJ4bnduNy9wT0FBMFVuUFJqNEgycS92STkyMTFYCmFXbzczdTE2SFBJbkpObkpXK3ltOWlkSnZSQnUrVDhPYnFZempIVUNnWUJGcFZFK0ZiV1F1TjIxbmNVZmlSbnMKbHlodnpreXdTYkZWSGx4MDJnbmYybVdJaFpNRnZvdnVWQytrZUUxQUxqTWRyZ1JPSG01WHErTFA0V01IUGRBRgpTQk9SQlpVRVF0VVhaZGV5eVNzYjY4dmZiWW5pK0dUOGpqNGhhVDh6RzUzWnZDYTJYSW9PZW1QaWNqalc5TDdvCjJ2QnZFdU5Uc21PV0dTVUFvMTZLNlFLQmdRRG1kcGwzK0gvY2pRRjY3Z3QwNWlpSmRSOFNzaEVWSmhHZDNSM2gKZFlDNVhPd2tLZ1ZiSzdYTnRFNWc1QWhDVHV2NTE1OSs5bkZBOEk4THBYeXFPaHlHbHMxOEVjOHpobjI1d09ZOAo0WEExTnFiR0tDMW1vWHg0Y2RKZ25vNjBKSWJLc3pobVU5SnVmRHE5ZjlrTzFqNHFnWW13bzk1akZXaXZ5Tzc0CkZtaGM3UUtCZ0Uvckc2eVNHVmtsNWhaTVVsMTJVUndXcGVicnBvbnQ0YWowQysvdkRhWUNwaVRWcXBLKzBoMzkKSlJZYlV4bmRRZkJKYzk3TTBQa0cyQ2l2RUtRZG9JNWhyN2hMUlpzMlRNaHVxMzMraG5UeFE4bTRrbmEwTURobAo5bTBwd1AxekgvTGxyV1NIMXV5RWNjWGptUFdGck1pNnJVN1piZHczNkZrcWcvUGdNZXIzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
  ca:
    crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRQzBQSkZXcUwrb1BQOGl4TnE2cm5GVEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwemRtTXRZMkYwTFdOaE1CNFhEVEkwTURjeU5qQTJNekF5TkZvWERUTTBNRGN5TkRBMgpNekF5TkZvd0ZURVRNQkVHQTFVRUF4TUtjM1pqTFdOaGRDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTHkrbTBkRDhJWFpvK0UxQVBYN25PU2w1Z3JIVDlwVnRoUWZoNjBtQlJtbVRicC8KemUyS0NIeGhtdDh4WmRGRjBocnZVLzB0ZWhHK3hzUnF3SWRyMit4QWVhRTBlNWNBanFYNUl1V250RnB4YTljSgpvVW9paVh5ZC96MFlHV3JuWjNsZzUxc0JTNXREU1lqR3FnbTlnY3Y0aDhCS0NzSXZIVXdTSGJKZWk5c3RidmYxClhSQlQ0ZjV6UHJBdjhmZkpyRms4WWpqbmNDbEozcFJLSmcvVXpubmtNVW1UU0FTZ3BhcGlIbFRpTFpRdmx4L0YKcy9IT0ZNTTgxL1pmanpDWHNSc3VhYWJIVjFuUEhIdDM5d0dRWjNQeUFaUEZnN29HMGdjK0hxMHcvWStqbG82VwozbGhPbHlPekhVSzhZaUxobkw3VnB5aXhnYUJtMWRCOThKTHZ1NTBDQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlNObXJNSFQ3Qm1pdk95QXZlYXVjYU1vY01EU1RBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFoQTB1dFE5U0plb2RWdDEzb05weDl1OURWNkNETGJTUEplUWpmVXg3UVMreFltMWo3NWhkCkNTVEdGTW1RRWFkOEZ0cnZoRm1ISXQzQS9PVDcwZ0NjcC9pZVVGYWFWVExaalFPNHVEd2pLS0hDclZUTTcxS3YKaW51YkdZbE9ncGxIWmxwRDlvN2xNU1RGU25uR2FYRGVucnFVRmFIMlZDbkZ2YVdLcVYwWGkxNlM4Wllka2VJSwpBK0hqQlZRU2EyRkJXNWZaeEt4b0ZWWkZVMmRFMzI4aHJWTUlFRW1YNGxHRXJ1UjJuUkM4OHRyQWVSdnQrdWlhCmVpOW1pZWs2ekxPemVPOGlMVW1XbkQyYUJDMVZidit2blpKRFdGTUxuQXNCTklNRG5qWWJNUTVGdlBXcThaTTQKVHlQYjcraWlCZmtLZEwxL09aaVN3Z0Mra2tGZ0g3NFhNQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  extraAltNames: []
  # use extra names if you want use the webhook via an ingress or a loadbalancer

image:
  repository: ghcr.io/banzaicloud/vault-secrets-webhook
  # tag: ""
  pullPolicy: IfNotPresent
  imagePullSecrets: []

service:
  name: vault-secrets-webhook
  type: ClusterIP
  externalPort: 443
  internalPort: 8443
  annotations: {}
  # Annotate service
  # This can be used for example if type is AWS LoadBalancer and you want to add security groups

ingress:
  enabled: false
  annotations: {}
  # dns of ingress for vault-webhook
  # host: example.com

webhookClientConfig:
  # By default the mutating webhook uses the service of the webhook directly to contact webhook
  # Use url if webhook should be contacted over loadbalancer or ingress instead of service object
  useUrl: false
  # set the url how the webhook should be contacted (including protocol https://)
  # url: https://example.com

vaultEnv:
  repository: ghcr.io/banzaicloud/vault-env
  tag: 1.11.1

env:
  VAULT_IMAGE: vault:1.6.2
  # VAULT_CAPATH: /vault/tls
  # # Used when the pod that should get secret injected does not
  # # specify an imagePullSecret
  # DEFAULT_IMAGE_PULL_SECRET:
  # DEFAULT_IMAGE_PULL_SECRET_NAMESPACE:
  # VAULT_CLIENT_TIMEOUT: 10s
  # # define the webhook's role in Vault used for authentication,
  # # if not defined individually in resources by annotations.
  # VAULT_ROLE: vault-secrets-webhook

metrics:
  enabled: false
  port: 8443
  serviceMonitor:
    enabled: false
    scheme: https
    tlsConfig:
      insecureSkipVerify: true

securityContext:
  runAsUser: 65534
  allowPrivilegeEscalation: false

podSecurityContext: {}

volumes: []
# - name: vault-tls
#   secret:
#     secretName: vault-tls

volumeMounts: []
# - name: vault-tls
#   mountPath: /vault/tls

podAnnotations: {}

labels: {}
  #  team: banzai

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

## Assign a PriorityClassName to pods if set
priorityClassName: ""

rbac:
  psp:
    enabled: false
  authDelegatorRole:
    enabled: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Labels to add to the service account
  labels: {}
  # Annotations to add to the service account
  annotations: {}
  # Enables GKE workload identity
  #  iam.gke.io/gcp-service-account: gsa@project.iam.gserviceaccount.com
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# A list of Kubernetes resource types to mutate as well:
# Example: ["ingresses", "servicemonitors"]
customResourceMutations: []

customResourcesFailurePolicy: Ignore

# This can cause issues when used with Helm, so it is not enabled by default
configMapMutation: false

configMapFailurePolicy: Ignore

podsFailurePolicy: Ignore

secretsFailurePolicy: Ignore

apiSideEffectValue: NoneOnDryRun

namespaceSelector:
  matchExpressions:
    - key: name
      operator: NotIn
      values:
        - kube-system
  # matchLabels:
  #   vault-injection: enabled

# In case of the K8s cluster version is above 1.15 objectSelector is usable
objectSelector: {}
  # matchExpressions:
  # - key: security.banzaicloud.io/mutate
  #   operator: NotIn
  #   values:
  #   - skip

podDisruptionBudget:
  enabled: true
  minAvailable: 1

timeoutSeconds: false

hostNetwork: false
